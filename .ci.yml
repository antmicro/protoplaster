stages:
  - code-quality-checks
  - tests
  - build-docs

check-code-quality:
  stage: code-quality-checks
  image: debian:bookworm
  script:
    - PATH="/root/.local/bin:$PATH"
    - apt -y update
    - apt -y install python3 pipx git
    - pipx install yapf==0.40.2
    - yapf -ipr protoplaster/
    - test $(git status --porcelain | wc -l) -eq 0 || { git diff; false; }

installation-test:
  stage: tests
  image: debian:bookworm
  script:
    - PATH="/root/.local/bin:$PATH"
    - apt -y update
    - apt -y install python3 python3-venv git
    - python3 -m venv ./venv
    - source ./venv/bin/activate
    - pip install .
    - cd /tmp/
    - protoplaster --help

build-docs:
  stage: build-docs
  image: btdi/latex
  script:
    - PATH="/root/.local/bin:$PATH"
    - apt -y update
    - apt -y install python3 python3-venv git make
    - python3 -m venv ./venv
    - source ./venv/bin/activate
    - pip install .
    - pip install git+https://github.com/antmicro/tuttest
    - tuttest README.md example > example.yml
    - protoplaster --test-dir . --reports-dir . --artifacts-dir . --test-file example.yml --generate-docs
    - protoplaster --test-dir . --reports-dir . --artifacts-dir . --test-file example.yml --csv report.csv
    - protoplaster-test-report report.csv -t md
    - cp -r .github/docs-template docs/
    - cp README.md docs/source/readme.md
    - cp protoplaster.md docs/source/
    - cp report.md docs/source/
    - tuttest README.md system-report-example > system-report-example.yml
    - protoplaster-system-report -c system-report-example.yml
    - echo -e "\`\`\`\n$(cat system-report-example.yml)\n\`\`\`" >>  docs/source/system-report-example.yml
    - mkdir -p docs/source/_static/system_report
    - unzip report.zip -d docs/source/_static/system_report
    - ./.github/scripts/sphinx.sh
    - ./.github/scripts/latex.sh
  artifacts:
    paths:
      - docs/build/html/*

api-test:
  stage: tests
  image: debian:bookworm
  script:
    - PATH="/root/.local/bin:$PATH"
    - apt -y update
    - apt -y install python3 python3-venv git curl jq
    - python3 -m venv ./venv
    - source ./venv/bin/activate
    - pip install .
    - ./tests/test-api.sh
  artifacts:
    paths:
      - /srv/protoplaster/*
